<?php
$mediaExtent = [];
$lightMedia = [];
$otherMedia = [];
foreach ($item->media() as $media) {
	array_push($mediaExtent, $media->mediaType());
	array_push($mediaExtent, $media->renderer());
	array_push($mediaExtent, $media->extension());
    $mediaType = $media->mediaType();
    $mediaRenderer = $media->renderer();
    if ((strpos($mediaType, 'image/') !== false) || (strpos($mediaRenderer, 'youtube') !== false)) {
        $lightMedia[] = $media;
    } else {
        $otherMedia[] = $media;
    }
}
$tdExt = array('ply', 'nxs', 'nxz');
$imgExt = array('image/jpeg', 'image/png');
$gisExt = array("geojson");
$vidExt = array("youtube");
?>
<div class="testHalfImg">
	<div class="w3-bar w3-black">
	<?php if (array_intersect($mediaExtent, $tdExt)): ?>  
  		<button class="w3-bar-item w3-button tablink" onclick="openTabs(event,'3dhop')">3D Models</button>
	<?php endif; ?>
	<?php if (array_intersect($mediaExtent, $gisExt)): ?>  
  		<button class="w3-bar-item w3-button tablink" onclick="openTabs(event,'gisData')">GIS Data</button>
	<?php endif; ?>
	<?php if (array_intersect($mediaExtent, $imgExt)): ?>
  		<button class="w3-bar-item w3-button tablink" onclick="openTabs(event,'mediaTab')">Images</button>
	<?php endif; ?>
	<?php if (array_intersect($mediaExtent, $vidExt)): ?>
  		<button class="w3-bar-item w3-button tablink" onclick="openTabs(event,'videoTab')">Videos</button>
	<?php endif; ?>
	</div>
	<div id=3dhopParent>
	<?php if (array_intersect($mediaExtent, $tdExt)): ?> 
		<div id="3dhop" class="tdhop tab" onmousedown="if (event.preventDefault) event.preventDefault()"><!--<div id="tdhlg"></div>-->
			<div id="toolbar">
				<img id="home" title="Home" src="<?php echo $this->assetUrl('skins/dark/home.png'); ?>" /><br/>
				<img id="zoomin" title="Zoom In" src="<?php echo $this->assetUrl('skins/dark/zoomin.png'); ?>" /><br/>
				<img id="zoomout" title="Zoom Out" src="<?php echo $this->assetUrl('skins/dark/zoomout.png'); ?>" /><br/>
				<img id="light_on" title="Disable Light Control" src="<?php echo $this->assetUrl('skins/dark/lightcontrol_on.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="light" title="Enable Light Control"  src="<?php echo $this->assetUrl('skins/dark/lightcontrol.png'); ?>" /><br/>
				<img id="lighting_off" title="Enable Lighting"       src="<?php echo $this->assetUrl('skins/dark/lighting_off.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="lighting"     title="Disable Lighting"      src="<?php echo $this->assetUrl('skins/dark/lighting.png'); ?>" /><br/>
				<img id="color_tr" title="Show textured"       src="<?php echo $this->assetUrl('skins/dark/color_tr.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="color_on" title="Enable Color"       src="<?php echo $this->assetUrl('skins/dark/color_on.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="color_off"     title="Disable Color"      src="<?php echo $this->assetUrl('skins/dark/color.png'); ?>" /><br/>
				<img id="perspective" title="Perspective Camera" src="<?php echo $this->assetUrl('skins/dark/perspective.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="orthographic" title="Orthographic Camera" src="<?php echo $this->assetUrl('skins/dark/orthographic.png'); ?>" /><br/>
				<img id="measure_on" title="Disable Measure Tool" src="<?php echo $this->assetUrl('skins/dark/measure_on.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="measure" title="Enable Measure Tool" src="<?php echo $this->assetUrl('skins/dark/measure.png'); ?>" /><br/>
				<img id="pick_on" title="Disable PickPoint Mode"src="<?php echo $this->assetUrl('skins/dark/pick_on.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="pick" title="Enable PickPoint Mode" src="<?php echo $this->assetUrl('skins/dark/pick.png'); ?>" /><br/>
				<img id="sections_on" title="Disable Plane Sections" src="<?php echo $this->assetUrl('skins/dark/sections_on.png'); ?>"     style="position:absolute; visibility:hidden;"/>
				<img id="sections" title="Enable Plane Sections" src="<?php echo $this->assetUrl('skins/dark/sections.png'); ?>" /><br/>
				<img id="screenshot" title="Save Screenshot" src="<?php echo $this->assetUrl('skins/dark/screenshot.png'); ?>" /><br/>
				<img id="full_on" title="Exit Full Screen" src="<?php echo $this->assetUrl('skins/dark/full_on.png'); ?>" style="position:absolute; visibility:hidden;"/>
				<img id="full" title="Full Screen" src="<?php echo $this->assetUrl('skins/dark/full.png'); ?>" /><br/>
			</div>
			<div id="sections-box" class="output-box">
				<table class="output-table" onmousedown="event.stopPropagation()">
					<tr><td>Plane</td><td>Position</td><td>Flip</td></tr>
					<tr><td><hr/></td><td><hr/></td><td><hr/></td></tr>
					<tr>
						<td><img id="xplane_on" title="Disable X Axis Section" src="<?php echo $this->assetUrl('skins/icons/sectionX_on.png'); ?>" onclick="sectionxSwitch()" style="position:absolute; visibility:hidden; border:1px inset;"/>
							<img id="xplane" title="Enable X Axis Section" src="<?php echo $this->assetUrl('skins/icons/sectionX.png'); ?>" onclick="sectionxSwitch()"/><br/></td>
						<td><input id="xplaneSlider" class="output-input" type="range" title="Move X Axis Section Position"/></td> 
						<td><input id="xplaneFlip" class="output-input" type="checkbox" title="Flip X Axis Section Direction"/></td>
					</tr>
					<tr>
						<td><img   id="yplane_on" title="Disable Y Axis Section" src="<?php echo $this->assetUrl('skins/icons/sectionY_on.png'); ?>" onclick="sectionySwitch()" style="position:absolute; visibility:hidden; border:1px inset;"/>
							<img   id="yplane" title="Enable Y Axis Section"  src="<?php echo $this->assetUrl('skins/icons/sectionY.png'); ?>" onclick="sectionySwitch()"/><br/></td>
						<td><input id="yplaneSlider" class="output-input"  type="range" title="Move Y Axis Section Position"/></td> 
						<td><input id="yplaneFlip" class="output-input"  type="checkbox" title="Flip Y Axis Section Direction"/></td>
					</tr>
					<tr>
						<td><img   id="zplane_on" title="Disable Z Axis Section" src="<?php echo $this->assetUrl('skins/icons/sectionZ_on.png'); ?>" onclick="sectionzSwitch()" style="position:absolute; visibility:hidden; border:1px inset;"/>
							<img   id="zplane" title="Enable Z Axis Section"  src="<?php echo $this->assetUrl('skins/icons/sectionZ.png'); ?>" onclick="sectionzSwitch()"/><br/></td>
						<td><input id="zplaneSlider" class="output-input"  type="range" title="Move Y Axis Section Position"/></td> 
						<td><input id="zplaneFlip" class="output-input" type="checkbox" title="Flip Z Axis Section Direction"/></td>
					</tr>
				</table>
				<table class="output-table" onmousedown="event.stopPropagation()" style="text-align:right;">
					<tr>
						<td>Show planes<input id="showPlane" class="output-input" type="checkbox" title="Show Section Planes"/></td>
						<td>Show edges<input  id="showBorder" class="output-input" type="checkbox" title="Show Section Edges"/></td>
					</tr>
				</table>
			</div>
			<div id="measure-box" class="output-box">Measured length<hr/><span id="measure-output" class="output-text" onmousedown="event.stopPropagation()">0.0</span></div> 
			<div id="pickpoint-box" class="output-box">Coordinates <?php if ($srs = $item->value('air:spatial_reference_system')): echo "(".$srs.")"; endif; ?><hr/><span id="pickpoint-output" class="output-text" onmousedown="event.stopPropagation()">[ 0 , 0 , 0 ]</span></div>
			<div class="infoPosition" id="infoPositionContainer">
				<div id="infoPosition"><b>Trackball position</b></div>
				<div id="hiddenPosition" style="display:none"></div>
				<div id="closePosition" onclick="$('#infoPositionContainer').hide();"><i class="fas fa-times"></i></div>
				<div id="copyPosition" onclick="copyToClipboard('#hiddenPosition');"><i class="far fa-clipboard"></i></div>
			</div>
			<div class="toggleLegend" id="toggleLegend" title="Show the layers" onclick="toggleLegend()"><i class="fas fa-bars"></i></div>
			<div class="layerHopList">
				<legend>Layers:</legend>
					<div class="bubble checkAll">
						<input id="checkAll" class="layerCB" type="checkbox" style="cursor:hand;" onclick="checkAllModels();">Check All</input>
					</div>
					<fieldset>
					<?php foreach($otherMedia as $media): ?>
						<?php if ($media->extension() == "nxz" || $media->extension() == "nxs" || $media->extension() == "ply"): ?>
							<div class="<?php echo "layer" . $media->id() . ""; ?>">
								<div class="<?php echo $media->value('dcterms:type'); ?>">
									<div class="bubble">
										<input class="layerOK" type="checkbox" checked="checked" style="cursor:hand;" onclick="presenter.toggleInstanceVisibilityByName('<?php $paragraphName = "Model" . $media->id() . ""; echo $paragraphName ?>', true);">
										<?php echo $media->displayTitle(); ?> </input>
									</div>
								</div>
							</div>
						<?php endif; ?>
					<?php endforeach; ?>
				</fieldset>
			</div>
			<canvas id="draw-canvas" style="background-image: url(<?php echo $this->assetUrl('skins/backgrounds/dark.jpg'); ?>)"/>
		</div>
	<?php endif; ?>
	<?php if (array_intersect($mediaExtent, $gisExt)): ?>
		<div class="tab" id="gisData">
			<?php $template = 'omeka/site/item/show-default-gis.phtml'; ?>
			<?= $this->partial($template, $this->vars()) ?>
		</div>
	<?php endif; ?>
	<?php if (array_intersect($mediaExtent, $imgExt)): ?>
		<div class="tab" id="mediaTab">
		<?php $template = 'omeka/site/item/show-default-media.phtml'; ?>
		<?= $this->partial($template, $this->vars()) ?>
		</div>
	<?php endif; ?>
	<?php if (array_intersect($mediaExtent, $vidExt)): ?>
		<div class="tab" id="videoTab">
			<?php $template = 'omeka/site/item/show-default-video.phtml'; ?>
			<?= $this->partial($template, $this->vars()) ?>
		</div>
	<?php endif; ?>
	</div>

<script type="text/javascript">

function openTabs(evt, tabName) {
  var i, x, tablinks;
  x = document.getElementsByClassName("tab");
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablink");
  for (i = 0; i < x.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" w3-dark-red", "");
  }
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " w3-dark-red";
<?php if (in_array("geojson", $mediaExtent)): ?>
  map.invalidateSize();
<?php endif; ?>
}

</script>
<script type="text/javascript">

<?php if (array_intersect($mediaExtent, $tdExt)): ?>

var presenter = null;
function setup3dhop() { 
	presenter = new Presenter("draw-canvas");
	var sceneModify = null;
	presenter.setScene({
});
	presenter._onEndMeasurement = onEndMeasure;
    presenter._onEndPickingPoint = onEndPick;
}
function actionsToolbar(action) {
	if(action=='home') presenter.resetTrackball(); 
	else if(action=='zoomin') presenter.zoomIn();
	else if(action=='zoomout') presenter.zoomOut(); 
	else if(action=='light' || action=='light_on') { presenter.enableLightTrackball(!presenter.isLightTrackballEnabled()); lightSwitch(); } 
	else if(action=='lighting' || action=='lighting_off') { presenter.enableSceneLighting(!presenter.isSceneLightingEnabled()); lightingSwitch(); }
	else if(action=='color_on') { colorSwitch(1); }
    else if(action=='color_off') { colorSwitch(2); }
    else if(action=='color_tr') { colorSwitch(3); }
	else if(action=='perspective' || action=='orthographic') { presenter.toggleCameraType(); cameraSwitch(); }
	else if(action=='measure' || action=='measure_on') { presenter.enableMeasurementTool(!presenter.isMeasurementToolEnabled()); measureSwitch(); } 
	else if(action=='pick' || action=='pick_on') { presenter.enablePickpointMode(!presenter.isPickpointModeEnabled()); pickpointSwitch(); } 
	else if(action=='sections' || action=='sections_on') { sectiontoolReset(); sectiontoolSwitch(); } 
	else if(action=='screenshot') presenter.saveScreenshot();
	else if(action=='full'  || action=='full_on') fullscreenSwitch(); 
}
function onEndMeasure(measure) {
	// measure.toFixed(2) sets the number of decimals when displaying the measure
	// depending on the model measure units, use "mm","m","km" or whatever you have
	$('#measure-output').html(measure.toFixed(2));
}

function onEndPick(point) {
	// point.toFixed(2) sets the number of decimals when displaying the picked point
	var x = point[0].toFixed(2);
	var y = point[2].toFixed(2);
	var z = point[1].toFixed(2);
	$('#pickpoint-output').html("[ "+x+" , "+y+" , "+z+" ]");
}

function colorSwitch(mode){
    
    if(mode == 1)
    {
        $('#color_on').css("visibility", "hidden");
        $('#color_off').css("visibility", "visible");
        $('#color_tr').css("visibility", "hidden");
        presenter.setInstanceTransparencyByName(HOP_ALL,false,true);   
        presenter.setInstanceSolidColorByName(HOP_ALL,false,true);       
    }
    else if(mode == 2)
    {
        $('#color_on').css("visibility", "hidden");
        $('#color_off').css("visibility", "hidden");
        $('#color_tr').css("visibility", "visible");
        presenter.setInstanceTransparencyByName(HOP_ALL,true,true);   
        presenter.setInstanceSolidColorByName(HOP_ALL,false,true);   
    }
    else if(mode == 3)
    {
        $('#color_on').css("visibility", "visible");
        $('#color_off').css("visibility", "hidden");
        $('#color_tr').css("visibility", "hidden");
        presenter.setInstanceTransparencyByName(HOP_ALL,false,true);   
        presenter.setInstanceSolidColorByName(HOP_ALL,true,true);   
    }
}

<?php endif; ?>

var firstTab = "'" + $("#3dhopParent > div").first().attr("id"); + "'";

$(document).ready(function(){
	$('#3dhopParent').each(function () {
    if (!$(this).children('div').length) {
        $(this).html("<div class='noMedia'><h1>NO MEDIA AVAILABLE</h1></div>");
    }
	$("#3dhopParent > div:first").show();
	$("#3dhopParent > div:not(:first)").hide();
	$("div.w3-bar > button:first").addClass("w3-dark-red");
  })
<?php if (array_intersect($mediaExtent, $tdExt)): ?>
	init3dhop();
	setup3dhop();
	moveToolbar(20,20);
    sectiontoolInit();
	modifyScene0();
<?php endif; ?>
});
</script>

<?php if (array_intersect($mediaExtent, $tdExt)): ?>
<script>
$(window).resize(function() {
	presenter.repaint();
});
function modifyScene0() {
	$(":checkbox" ).prop("checked",true);
	$("fieldset > div").show();
	disableInfo();
	$(".infoContext").html("");
	$(".infoContext").hide();
	$(".layerHopList").hide();
	$('#infoParagraph').html("<b>Main Model</b>");
	presenter.setScene({
		meshes: {
			<?php if (count($otherMedia) > 0): ?>
            <?php foreach($otherMedia as $media): ?>
			<?php if ($media->extension() == "nxz" || $media->extension() == "nxs" || $media->extension() == "ply"): ?>
			"<?php echo $media->displayTitle(); ?>" : { url: "<?php echo $media->originalUrl(); ?>" },
            <?php endif; ?>
			<?php endforeach; ?>
            <?php endif; ?>
		},
		modelInstances : {
			<?php if (count($otherMedia) > 0): ?>
            <?php foreach($otherMedia as $media): ?>
			<?php if ($media->extension() == "nxz" || $media->extension() == "nxs" || $media->extension() == "ply"): ?>
			"<?php echo "Model" . $media->id() . ""; ?>" : { mesh : "<?php echo $media->displayTitle(); ?>",
				useTransparency : false,
					alpha : 1
					},
			<?php endif; ?>
			<?php endforeach; ?>
            <?php endif; ?>
		},

		trackball: {
			type: <?php echo "SphereTrackball"; ?>,
			trackOptions: {
				startPhi      : <?php echo "1"; ?>,
				startTheta    : <?php echo "90.0"; ?>,
				startDistance : <?php echo "1.0"; ?>,
				minMaxPhi     : <?php echo "[-180, 180]"; ?>,
				minMaxTheta   : <?php echo "[-90, 90.0]"; ?>,
				minMaxDist    : <?php echo "[0.01, 2.0]"; ?>,
				startPanX     : <?php echo "0.0"; ?>,
				startPanY     : <?php echo "0.0"; ?>,
				startAngleX   : <?php echo "0.0"; ?>,
				startAngleY   : <?php echo "0.0"; ?>,
				minMaxPanX    : <?php echo "[-0.7, 0.7]"; ?>,
				minMaxPanY    : <?php echo "[-0.7, 0.7]"; ?>,
				minMaxAngleX  : <?php echo "[-70.0, 70.0]"; ?>,
				minMaxAngleY  : <?php echo "[-70.0, 70.0]"; ?>,
			}
		},
		space: {
			centerMode: "<?php echo "scene"; ?>",
			radiusMode: "<?php echo "scene"; ?>",
			transform: { 
				rotation: <?php echo "[-90.0, 0.0, 0.0]"; ?>,
				scale: <?php echo "[1.0, 1.0, 1.0]"; ?>,
			},
			cameraNearFar: <?php echo "[0.01, 5.0]"; ?>,
		}
	});
    presenter._onEndMeasurement = onEndMeasure;
    presenter._onEndPickingPoint = onEndPick;
}

function checkAllModels() {
	if ($("#checkAll").prop("checked")) {
		presenter.setInstanceVisibility(HOP_ALL, true, true);
		$("input").not("#checkAll").prop('checked',true	);			
	}	else {
		presenter.setInstanceVisibility(HOP_ALL, false, false);
		$("input").not("#checkAll").prop('checked',false);
	}
	presenter.repaint();
}

function changeVisibility(name, single) {

if(single)
{
presenter.setInstanceVisibility(HOP_ALL, false, false);
presenter.setInstanceVisibilityByName(name, true, true);

var i;
for (i = 0; i < $('.layerCB').length; i++) {
if($('.layerCB')[i].id == name)
$('.layerCB')[i].checked = true;
else
$('.layerCB')[i].checked = false; 
} 
}
else
{
presenter.toggleInstanceVisibilityByName(name, true);
}
}

function setTopHeading() {
var currpos = presenter.getTrackballPosition();
currpos[1] = 90.0;
presenter.animateToTrackballPosition(currpos);
}

function setNorthHeading() {
var currpos = presenter.getTrackballPosition();
currpos[0] = 0.0;
presenter.animateToTrackballPosition(currpos);
}

function infoSwitch() {
  if(jQuery('#pin').css("visibility")=="visible"){
    enableInfo();
	presenter._onPickedInstance = onPickedInstance;
	$(".infoContext").show();
  }
  else{
    disableInfo();
	presenter._onPickedInstance = !onPickedInstance;
	$(".infoContext").html("");
	$(".infoContext").hide();
  }
}

function enableInfo() {
  jQuery('#pin').css("visibility", "hidden");
  jQuery('#pin_on').css("visibility", "visible");
}

function disableInfo() {
  jQuery('#pin_on').css("visibility", "hidden");
  jQuery('#pin').css("visibility", "visible");
}

function toggleLegend() {
	jQuery(".layerHopList").toggle();
}

function resetTrackball() {
	presenter.setTrackballPosition([ 0, 90, 0, 0, 0, 1 ]);
}

function getView() {
	var trackballPosition = presenter.getTrackballPosition();
	var phiPos = trackballPosition[0];
	var thetaPos = trackballPosition[1];
	var xPos = trackballPosition[2];
	var yPos = trackballPosition[3];
	var zPos = trackballPosition[4];
	var distPos = trackballPosition[5];
	var xAngle = trackballPosition[6];
	var yAngle = trackballPosition[7];
	var zAngle = trackballPosition[8];
	$('#infoPositionContainer').show();
	$('#infoPosition').html("<b>Trackball position</b><br>Phi: "+phiPos+"<br>Theta: "+thetaPos+"<br>X: "+xPos+"<br>Y: "+yPos+"<br>Z: "+zPos+"<br>Dist: "+distPos);
	$('#hiddenPosition').html(phiPos+" "+thetaPos+" "+xPos+" "+yPos+" "+zPos+" "+distPos);
}

function copyToClipboard(element) {
  var $temp = $("<input>");
  $("body").append($temp);
  $temp.val($(element).text()).select();
  document.execCommand("copy");
  $temp.remove();
  alert('Your view position has been copied to the clipboard');
}

</script>
<?php endif; ?>